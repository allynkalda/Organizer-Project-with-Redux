{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/project/CreateProject.js","store/actions/projectActions.js","components/auth/SignIn.js","components/auth/SignUp.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbconfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","firebase","console","log","links","uid","layout_SignedInLinks","layout_SignedOutLinks","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","toString","calendar","ProjectList","projects","map","id","key","project_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","project_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","CreateProject","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","createProject","history","push","onSubmit","htmlFor","onChange","name","cols","rows","getFirestore","authorId","add","objectSpread","firstName","lastName","Date","catch","err","SignIn","email","password","signIn","authError","creds","credentials","signInWithEmailAndPassword","error","SignUp","signUp","newUser","_ref3","createUserWithEmailAndPassword","response","doc","set","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbconfig","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f909f935.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","\n\nexport const signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((error) => {\n            dispatch({ type: 'LOGIN_ERROR', error})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((response) => {\n            return firestore.collection('users').doc(response.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch((err) => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    console.log(props)\n  const { auth, profile } = props;\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Organizer</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({ project }) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title \">{project.title}</span>\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n          <p className=\"grey-text\">{moment(project.createdAt.toDate().toString()).calendar()}</p>\n        </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div>\n        { projects && projects.map(project => {\n            return (\n                <Link to={'/project/' + project.id} key={project.id}>\n                  <ProjectSummary project={project} />\n                </Link>\n            )\n        })}\n    </div>\n  )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul>\n                        { notifications && notifications.map(item => {\n                            return(\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","\nimport React, { Component } from 'react'\nimport ProjectList from '../project/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    \n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications\n    }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n    \nconst ProjectDetails = (props) => {\n    const { auth, project } = props;\n    if (!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return (\n        <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div><p>{moment(project.createdAt.toDate().toString()).calendar()}</p></div>\n                </div>\n            </div>\n        </div>\n        )\n    } else {\n        return (\n        <div className=\"container center\">\n            <p>Loading...</p>\n        </div>\n            )\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/')\n  }\n  render() {\n\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to='/signin' />\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id='title' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Content</label>\n            <textarea name=\"content\" id=\"content\" className=\"materialize-textarea\" cols=\"30\" rows=\"10\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, {getFirestore}) => {\n      const firestore = getFirestore();\n      const profile = getState().firebase.profile;\n      const authorId = getState().firebase.auth.uid;\n      firestore.collection('projects').add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: authorId,\n        createdAt: new Date()\n      }).then(() => {\n        dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n      }).catch(err => {\n        dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n      });\n    }\n  };","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn }  from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  }\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign In</button>\n            <div className=\"red-text center\">\n                {\n                  authError ? <p>{authError}</p> : null\n                }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst matchDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, matchDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n  }\n  render() {\n\n    const { auth, authError } = this.props;\n\n    if (auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"red-text center\">\n              { authError ? <p>{ authError }</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/project/ProjectDetails';\nimport CreateProject from './components/project/CreateProject';\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error')\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('sign out success')\n            return state;\n        case 'SIGNUP_SUCCESS': \n            console.log('sign up success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR': \n            console.log('sign up error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","const initState = {}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT_SUCCESS':\n      console.log('create project success');\n      return state;\n    case 'CREATE_PROJECT_ERROR':\n      console.log('create project error');\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCFH5ixUGXeV_dFYMyh_GE3_C2SeqHj8hM\",\n    authDomain: \"organizer-project-with-redux.firebaseapp.com\",\n    databaseURL: \"https://organizer-project-with-redux.firebaseio.com\",\n    projectId: \"organizer-project-with-redux\",\n    storageBucket: \"organizer-project-with-redux.appspot.com\",\n    messagingSenderId: \"496211745636\",\n    appId: \"1:496211745636:web:22c486a6c5f858f4\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true })\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbconfig from './config/fbconfig'\n\nconst store = createStore(rootReducer, \n    compose ( applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbconfig),\n        reactReduxFirebase(fbconfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true})\n    )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}